# Test that constant array indexing of gs input arrays is bounds checked at link
# time.
[require]
GL >= 2.0
GLSL >= 1.20
GL_ARB_geometry_shader4

[vertex shader]
#version 120

attribute vec4 vertex;

varying float gs_input[4];

void main()
{
	for (int i = 0; i < 4; i++)
		gs_input[i] = 0.5;
	gl_Position = vertex;
}

[geometry shader]
#version 120
#extension GL_ARB_geometry_shader4: enable

varying in float gs_input[][4];

varying out float gs_out;

void main()
{
	/* This should fail at link time once the size of the outer dimension of
	 * gs_input (3) is known.
	 */
	float s = gs_input[3][0];

	for (int i = 0; i < gl_VerticesIn; i++) {
		gs_out = s;

		gl_Position = gl_PositionIn[i];
		EmitVertex();
	}
}

[geometry layout]
input type GL_TRIANGLES
output type GL_TRIANGLE_STRIP
vertices out 3

[fragment shader]
#version 120

const int gs_VerticesIn = 3;

varying float gs_out;

void main()
{
  gl_FragColor = vec4(gs_out);
}

[test]
link error
